From b39e40ee528f2503a87339fd1384c7e72526b2c3 Mon Sep 17 00:00:00 2001
From: Konrad Weihmann <kweihmann@outlook.com>
Date: Sun, 27 Oct 2024 08:21:08 +0100
Subject: [PATCH] SystemdUnitParser: fixes for cython 3.13+

after a refactoring internal attributes
- _inline_comment_prefixes
- _comment_prefixes

are now accessible through _prefixes namespace.
Probe for the correct one available

Signed-off-by: Konrad Weihmann <kweihmann@outlook.com>
Upstream-Status: Submitted
---
 SystemdUnitParser/__init__.py | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/SystemdUnitParser/__init__.py b/SystemdUnitParser/__init__.py
index a64ec83..1b3df44 100644
--- a/SystemdUnitParser/__init__.py
+++ b/SystemdUnitParser/__init__.py
@@ -19,6 +19,19 @@ class SystemdUnitParser(configparser.RawConfigParser):
         configparser.RawConfigParser.__init__(self, empty_lines_in_values=False, strict=False)
         self.optionxform = lambda option: option
 
+    def _get_inline_prefixes(self):
+        # Fix for newer cython
+        if hasattr(self, '_inline_comment_prefixes'):
+            return self._inline_comment_prefixes
+        else:
+            return self._prefixes.inline
+        
+    def _get_comment_prefixes(self):
+        if hasattr(self, '_comment_prefixes'):
+            return self._comment_prefixes
+        else:
+            return self._prefixes.full
+
     def _read(self, fp, fpname):
         """Parse a sectioned configuration file.
 
@@ -46,7 +59,7 @@ class SystemdUnitParser(configparser.RawConfigParser):
         for lineno, line in enumerate(fp, start=1):
             comment_start = sys.maxsize
             # strip inline comments
-            inline_prefixes = {p: -1 for p in self._inline_comment_prefixes}
+            inline_prefixes = {p: -1 for p in self._get_inline_prefixes()}
             while comment_start == sys.maxsize and inline_prefixes:
                 next_prefixes = {}
                 for prefix, index in inline_prefixes.items():
@@ -58,7 +71,7 @@ class SystemdUnitParser(configparser.RawConfigParser):
                         comment_start = min(comment_start, index)
                 inline_prefixes = next_prefixes
             # strip full line comments
-            for prefix in self._comment_prefixes:
+            for prefix in self._get_comment_prefixes():
                 if line.strip().startswith(prefix):
                     comment_start = 0
                     break
-- 
2.34.1

